# -*- org-confirm-babel-evaluate: nil -*-
# -*- org-export-babel-evaluate: t -*-
#+BEGIN_COMMENT
.. title: Pokus
.. slug: pokus
.. date: 2017-06-29 11:30:03 UTC+02:00
.. tags: 
.. category: 
.. link: 
.. description: 
.. type: text
#+END_COMMENT


* Pokus s org-mode
  - blablabla
  - ahoj
  - muhehe

Write your post here.

| a | b | c | d | e |
|---+---+---+---+---|
| 1 | 2 | 3 | 4 | 5 |

#+begin_src python :results value table drawer :exports both :table-header
  res = [['fc layer dilation', 'Receptive Field'], None]
  for fc_dilation in [6, 12, 18, 24]:
      # layer ... kernel size, stride, dilation
      net = [[3, 1, 1],
	   [3, 1, 1],
	   [3, 2, 1],  # pooling 1

	   [3, 1, 1],
	   [3, 1, 1],
	   [3, 2, 1],  # pooling 2

	   [3, 1, 1],
	   [3, 1, 1],
	   [3, 1, 1],
	   [3, 2, 1],  # pooling 3

	   [3, 1, 1],
	   [3, 1, 1],
	   [3, 1, 1],
	   [3, 1, 1],  # pooling 4

	   [3, 1, 2],
	   [3, 1, 2],
	   [3, 1, 2],
	   [3, 1, 1],  # pooling 5

	   [3, 1, fc_dilation]]

      N = len(net)
      RF = 1
      for ii in range(N-1, -1, -1):
          (k, s, d) = net[ii]
          RF = (RF-1) * s + ((k-1)*d + 1)
      res.append([fc_dilation, RF])
  return res
#+end_src

#+RESULTS:
:RESULTS:
| fc layer dilation | Receptive Field |
|-------------------+-----------------|
|                 6 |             323 |
|                12 |             419 |
|                18 |             515 |
|                24 |             611 |
:END:
